[{"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\FeedbackAnalytics.js":"1","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\SensorAnalytics.js":"2","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\FeedbackState.js":"3","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\main.page.js":"4","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\index.js":"5","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\Device.js":"6","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\login.page.js":"7","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\DeviceBar.js":"8"},{"size":2709,"mtime":1607362248776,"results":"9","hashOfConfig":"10"},{"size":2601,"mtime":1607362285536,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607360356843,"results":"12","hashOfConfig":"10"},{"size":3519,"mtime":1607371346545,"results":"13","hashOfConfig":"10"},{"size":757,"mtime":1607282854769,"results":"14","hashOfConfig":"10"},{"size":1137,"mtime":1607331655964,"results":"15","hashOfConfig":"10"},{"size":1927,"mtime":1607370645234,"results":"16","hashOfConfig":"10"},{"size":1827,"mtime":1607332157155,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lumvx2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\FeedbackAnalytics.js",["35","36"],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\SensorAnalytics.js",["37","38"],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\FeedbackState.js",[],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\main.page.js",["39"],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\index.js",[],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\Device.js",[],"C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\login.page.js",["40"],"import {Component} from 'react';\r\n\r\nclass LoginPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \"api_key\":\"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({api_key: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) { // function to call when button clicked\r\n        this.verifyLogin(this.state.api_key);\r\n        event.preventDefault();\r\n    }\r\n\r\n    verifyLogin = (api_key) =>{\r\n        fetch(\"/login/user?api_key=\"+api_key).then(res => res.json()).then(data =>{\r\n            if(data[\"valid_user\"] == true){ // valid api key, proceed to application\r\n                console.log(\"logging in\");\r\n                this.props.history.push(\"/MyIOSpace?api_key=\"+api_key); // go to my io space with provided api key\r\n            } else{  // Invalid api key, alert user\r\n                window.alert(\"The API key you entered is invalid, please try again\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Container\">\r\n                <button className=\"CardContainer\" id=\"backButton\" onClick={() => {this.props.history.push(\"/\")}} style={{display:'flex'}}>\r\n                        <h1 className=\"CardText\"> ðŸ”™Back </h1>\r\n                    </button>\r\n            <div className=\"ConnectPage\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                    Enter Your API Key:\r\n                    <input className=\"ConnectInput\" type=\"text\" value={this.state.api_key} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className=\"ConnectButton\" type=\"submit\" value=\"Connect\" />\r\n                </form>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\Evan\\PycharmProjects\\3010_L2_M4\\TeamProject\\react-frontend\\src\\Components\\DeviceBar.js",[],{"ruleId":"41","severity":1,"message":"42","line":40,"column":15,"nodeType":"43","messageId":"44","endLine":40,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":42,"column":15,"nodeType":"43","messageId":"44","endLine":42,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":40,"column":15,"nodeType":"43","messageId":"44","endLine":40,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":42,"column":15,"nodeType":"43","messageId":"44","endLine":42,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":19,"column":38,"nodeType":"48","endLine":19,"endColumn":48},{"ruleId":"49","severity":1,"message":"50","line":25,"column":35,"nodeType":"51","messageId":"52","endLine":25,"endColumn":37},"no-unused-vars","'nodeId' is assigned a value but never used.","Identifier","unusedVar","'deviceType' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]

